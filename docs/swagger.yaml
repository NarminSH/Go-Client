basePath: /
definitions:
  models.Client:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      patronymic:
        type: string
      phone_number:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
host: 192.168.31.74:8004
info:
  contact: {}
  description: This is a sample service for managing clients
  title: Clients API
  version: "1.0"
paths:
  /clients:
    get:
      consumes:
      - application/json
      description: Get  all clients
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Client'
            type: array
      summary: Get   all clients
      tags:
      - Clients
    post:
      consumes:
      - application/json
      description: Create a new client with the input paylod
      parameters:
      - description: Create client
        in: body
        name: newClient
        required: true
        schema:
          $ref: '#/definitions/models.Client'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Bad Request
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new client
      tags:
      - Clients
  /clients/{username}:
    delete:
      consumes:
      - application/json
      description: Delete particular client by username
      parameters:
      - description: Client username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Bad Request
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete particular client
      tags:
      - Clients
    get:
      description: get client by username
      parameters:
      - description: Client username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Bad Request
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      summary: Get one client
      tags:
      - Clients
    put:
      consumes:
      - application/json
      description: Update particular client by username
      parameters:
      - description: Client username
        in: path
        name: username
        required: true
        type: string
      - description: Update Client
        in: body
        name: updatedclient
        required: true
        schema:
          $ref: '#/definitions/models.Client'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Bad Request
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update particular client
      tags:
      - Clients
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
